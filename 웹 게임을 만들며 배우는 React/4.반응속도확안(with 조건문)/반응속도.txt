// jsx에서 null, undefined, false는 태그없음을 의미

// jsx에서는 보호 연산자 또는 삼항 연산자로 조건문을 사용, if사용 불가

// setTimeout 이용 속도 확인

// 함수형 컴포넌트에서 timeOut, startTime, endTime 설정
ref를 사용
dom에 직접 접근할 때 ref를 사용하지만 hooks에서는 this의 속성을 사용할 때 ref를 사용

// state, ref 차이
state
-- 접근하거나 변경하면 return이 다시 실행
ref
-- 변경해도 return이 다시 실행x
-- 불필요한 렌더링이 안일어남
-- 값이 변경되어도 rendering이 발생하지 않아야 하는 것들

// jsx에서 for, if는  {}안에 즉시 실행 함수 안에 적어야 함
{(()=>{
    if(result.length ===0 ){
        return null;
    } else{
        return <>
                <div>평균 시간: {result.reduce((a, c) => a + c) / result.length}ms</div>
                <button onClick={onReset}>리셋</button>
            </>
    }
})()}